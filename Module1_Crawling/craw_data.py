import requests
import json
import time


class TheMealDBCrawler:
    """
    A crawler for TheMealDB public API
    - Thu th·∫≠p d·ªØ li·ªáu m√≥n ƒÉn theo t·ª´ kh√≥a ho·∫∑c th·ªÉ lo·∫°i
    - L∆∞u d·ªØ li·ªáu ra file JSON
    """

    def __init__(self, delay=1):
        self.base_url = "https://www.themealdb.com/api/json/v1/1/"
        self.delay = delay
        self.recipes = []

    # ==============================
    # T√¨m m√≥n ƒÉn theo t·ª´ kh√≥a
    # ==============================
    def search_by_keyword(self, keyword: str):
        """T√¨m m√≥n ƒÉn theo t√™n ho·∫∑c nguy√™n li·ªáu"""
        url = f"{self.base_url}search.php?s={keyword}"
        res = requests.get(url)
        data = res.json()

        if data["meals"]:
            for meal in data["meals"]:
                self.recipes.append(self._extract_meal(meal))
        time.sleep(self.delay)

    # ==============================
    # T√¨m m√≥n theo th·ªÉ lo·∫°i (category)
    # ==============================
    def get_by_category(self, category: str):
        """L·∫•y danh s√°ch m√≥n theo th·ªÉ lo·∫°i"""
        url = f"{self.base_url}filter.php?c={category}"
        res = requests.get(url)
        data = res.json()

        if data["meals"]:
            for meal in data["meals"]:
                meal_id = meal["idMeal"]
                # L·∫•y chi ti·∫øt t·ª´ng m√≥n
                detail = self._get_detail(meal_id)
                if detail:
                    self.recipes.append(detail)
        time.sleep(self.delay)

    # ==============================
    # H√†m ph·ª•: L·∫•y chi ti·∫øt m√≥n ƒÉn theo ID
    # ==============================
    def _get_detail(self, meal_id: str):
        url = f"{self.base_url}lookup.php?i={meal_id}"
        res = requests.get(url)
        data = res.json()

        if data["meals"]:
            meal = data["meals"][0]
            return self._extract_meal(meal)
        return None

    # ==============================
    # Chu·∫©n h√≥a d·ªØ li·ªáu m√≥n ƒÉn
    # ==============================
    def _extract_meal(self, meal):
        """Tr√≠ch th√¥ng tin quan tr·ªçng t·ª´ JSON"""
        ingredients = [
            meal.get(f"strIngredient{i}")
            for i in range(1, 21)
            if meal.get(f"strIngredient{i}")
        ]

        return {
            "id": meal["idMeal"],
            "title": meal["strMeal"],
            "category": meal["strCategory"],
            "area": meal["strArea"],
            "instructions": meal["strInstructions"],
            "image": meal["strMealThumb"],
            "ingredients": ingredients,
        }

    # ==============================
    # L∆∞u d·ªØ li·ªáu ra file
    # ==============================
    def save_to_json(self, filename="recipes.json"):
        """L∆∞u d·ªØ li·ªáu m√≥n ƒÉn ra file JSON"""
        with open(filename, "w", encoding="utf-8") as f:
            json.dump(self.recipes, f, ensure_ascii=False, indent=4)
        print(f"ƒê√£ l∆∞u {len(self.recipes)} m√≥n ƒÉn v√†o {filename}")

    # ==============================
    # Ch·∫°y nhi·ªÅu t·ª´ kh√≥a
    # ==============================
    def run_by_keywords(self, keywords):
        """Thu th·∫≠p m√≥n ƒÉn d·ª±a theo danh s√°ch t·ª´ kh√≥a"""
        for key in keywords:
            print(f"üîç ƒêang thu th·∫≠p m√≥n: {key} ...")
            self.search_by_keyword(key)
        self.save_to_json("recipes_by_keywords.json")

    # ==============================
    # Ch·∫°y nhi·ªÅu th·ªÉ lo·∫°i
    # ==============================
    def run_by_categories(self, categories):
        """Thu th·∫≠p m√≥n ƒÉn d·ª±a theo danh s√°ch th·ªÉ lo·∫°i"""
        for cat in categories:
            print(f"üçΩÔ∏è ƒêang thu th·∫≠p th·ªÉ lo·∫°i: {cat} ...")
            self.get_by_category(cat)
        self.save_to_json("recipes_by_categories.json")


# ==============================
# Demo ch·∫°y th·ª≠
# ==============================
if __name__ == "__main__":
    crawler = TheMealDBCrawler(delay=1)

    # C√°ch 1: Crawl theo t·ª´ kh√≥a
    keywords = ["chicken", "beef", "rice", "salad"]
    crawler.run_by_keywords(keywords)

    # C√°ch 2: Crawl theo th·ªÉ lo·∫°i (c√≥ th·ªÉ m·ªü r·ªông)
    categories = ["Seafood", "Dessert", "Vegetarian"]
    crawler.run_by_categories(categories)
